<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="info.fanfou.db.dao.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="info.fanfou.db.entity.User" >
    <constructor >
      <idArg column="USER_ID" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="USER_NAME" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="EMAIL" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="CREATED_DATETIME" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="UPDATED_DATETIME" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    USER_ID, USER_NAME, EMAIL, CREATED_DATETIME, UPDATED_DATETIME
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="info.fanfou.db.entity.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from USER
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from USER
    where USER_ID = #{userId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from USER
    where USER_ID = #{userId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="info.fanfou.db.entity.UserExample" >
    delete from USER
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="info.fanfou.db.entity.User" >
    <selectKey resultType="java.lang.Long" keyProperty="userId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into USER (USER_NAME, EMAIL, CREATED_DATETIME, 
      UPDATED_DATETIME)
    values (#{userName,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{createdDatetime,jdbcType=TIMESTAMP}, 
      #{updatedDatetime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="info.fanfou.db.entity.User" >
    <selectKey resultType="java.lang.Long" keyProperty="userId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into USER
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userName != null" >
        USER_NAME,
      </if>
      <if test="email != null" >
        EMAIL,
      </if>
      <if test="createdDatetime != null" >
        CREATED_DATETIME,
      </if>
      <if test="updatedDatetime != null" >
        UPDATED_DATETIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="createdDatetime != null" >
        #{createdDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedDatetime != null" >
        #{updatedDatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="info.fanfou.db.entity.UserExample" resultType="java.lang.Integer" >
    select count(*) from USER
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update USER
    <set >
      <if test="record.userId != null" >
        USER_ID = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.userName != null" >
        USER_NAME = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        EMAIL = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.createdDatetime != null" >
        CREATED_DATETIME = #{record.createdDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedDatetime != null" >
        UPDATED_DATETIME = #{record.updatedDatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update USER
    set USER_ID = #{record.userId,jdbcType=BIGINT},
      USER_NAME = #{record.userName,jdbcType=VARCHAR},
      EMAIL = #{record.email,jdbcType=VARCHAR},
      CREATED_DATETIME = #{record.createdDatetime,jdbcType=TIMESTAMP},
      UPDATED_DATETIME = #{record.updatedDatetime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="info.fanfou.db.entity.User" >
    update USER
    <set >
      <if test="userName != null" >
        USER_NAME = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        EMAIL = #{email,jdbcType=VARCHAR},
      </if>
      <if test="createdDatetime != null" >
        CREATED_DATETIME = #{createdDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedDatetime != null" >
        UPDATED_DATETIME = #{updatedDatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where USER_ID = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="info.fanfou.db.entity.User" >
    update USER
    set USER_NAME = #{userName,jdbcType=VARCHAR},
      EMAIL = #{email,jdbcType=VARCHAR},
      CREATED_DATETIME = #{createdDatetime,jdbcType=TIMESTAMP},
      UPDATED_DATETIME = #{updatedDatetime,jdbcType=TIMESTAMP}
    where USER_ID = #{userId,jdbcType=BIGINT}
  </update>
</mapper>